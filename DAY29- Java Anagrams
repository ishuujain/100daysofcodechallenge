PROBLEM:
Two strings, a and b, are called anagrams if they contain all the same characters in the same frequencies. For this challenge, 
the test is not case-sensitive. For example, the anagrams of CAT are CAT, ACT, tac, TCA, aTC, and CtA.


SOLUTION:
import java.util.Scanner;

public class Solution {

    static boolean isAnagram(String a, String b) {
        // Complete the function
         int[] a1 = new int[91];
        // recording for String a
        for (char item : a.toUpperCase().toCharArray()) {
            int ascii = (int) item;
            a1[ascii]++;
        }
        // reversing for string b
        for (char item : b.toUpperCase().toCharArray()) {
            int ascii = (int) item;
            // if (a1[ascii] != 0) a1[ascii]--;
            a1[ascii]--;
        }
        
        for (int item : a1) {
            
            if (item != 0)
                return false;
        }
        
        return true;

    }

    public static void main(String[] args) {
    
        Scanner scan = new Scanner(System.in);
        String a = scan.next();
        String b = scan.next();
        scan.close();
        boolean ret = isAnagram(a, b);
        System.out.println( (ret) ? "Anagrams" : "Not Anagrams" );
    }
}
