PROBLEM:

(BINARY SEARCH)

1.Calculate the mid element of the collection.
2.Compare the key items with the mid element.
3.If key = middle element, then we return the mid index position for the key found.
4.Else If key > mid element, then the key lies in the right half of the collection. Thus repeat steps 1 to 3 on the lower (right) half of the collection.
5.Else key < mid element, then the key is in the upper half of the collection. Hence you need to repeat the binary search in the upper half.

SOLUTION:

public class binarysearch {
    public static int binsearch(int number[],int key)
    {
        int start=0,end= number.length-1;

        while(start<=end)
        {
            int mid=(start+end)/2;
            if(number[mid]==key)
            {
                return mid;
            }
            if(number[mid]<key)
            {
                start=mid+1;
            }
            else {
                end=mid-1;
            }
        }
        return -1;
    }
        public static void main(String args[])
    {
        int number[] ={2,5,7,19,34,57};
        int key=19;
        System.out.println("index for key is\n"+ binsearch(number,key));
    }
}
